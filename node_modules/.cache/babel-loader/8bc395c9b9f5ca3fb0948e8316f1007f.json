{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _trackHelper = require('./trackHelper');\n\nvar _helpers = require('./helpers');\n\nvar _helpers2 = _interopRequireDefault(_helpers);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar EventHandlers = {\n  // Event handler for previous and next\n  changeSlide: function changeSlide(options) {\n    var indexOffset, previousInt, slideOffset, unevenOffset, targetSlide;\n    var _props = this.props,\n        slidesToScroll = _props.slidesToScroll,\n        slidesToShow = _props.slidesToShow;\n    var _state = this.state,\n        slideCount = _state.slideCount,\n        currentSlide = _state.currentSlide;\n    unevenOffset = slideCount % slidesToScroll !== 0;\n    indexOffset = unevenOffset ? 0 : (slideCount - currentSlide) % slidesToScroll;\n\n    if (options.message === 'previous') {\n      slideOffset = indexOffset === 0 ? slidesToScroll : slidesToShow - indexOffset;\n      targetSlide = currentSlide - slideOffset;\n\n      if (this.props.lazyLoad) {\n        previousInt = currentSlide - slideOffset;\n        targetSlide = previousInt === -1 ? slideCount - 1 : previousInt;\n      }\n    } else if (options.message === 'next') {\n      slideOffset = indexOffset === 0 ? slidesToScroll : indexOffset;\n      targetSlide = currentSlide + slideOffset;\n\n      if (this.props.lazyLoad) {\n        targetSlide = (currentSlide + slidesToScroll) % slideCount + indexOffset;\n      }\n    } else if (options.message === 'dots' || options.message === 'children') {\n      // Click on dots\n      targetSlide = options.index * options.slidesToScroll;\n\n      if (targetSlide === options.currentSlide) {\n        return;\n      }\n    } else if (options.message === 'index') {\n      targetSlide = Number(options.index);\n\n      if (targetSlide === options.currentSlide) {\n        return;\n      }\n    }\n\n    this.slideHandler(targetSlide);\n  },\n  // Accessiblity handler for previous and next\n  keyHandler: function keyHandler(e) {\n    //Dont slide if the cursor is inside the form fields and arrow keys are pressed\n    if (!e.target.tagName.match('TEXTAREA|INPUT|SELECT')) {\n      if (e.keyCode === 37 && this.props.accessibility === true) {\n        this.changeSlide({\n          message: this.props.rtl === true ? 'next' : 'previous'\n        });\n      } else if (e.keyCode === 39 && this.props.accessibility === true) {\n        this.changeSlide({\n          message: this.props.rtl === true ? 'previous' : 'next'\n        });\n      }\n    }\n  },\n  // Focus on selecting a slide (click handler on track)\n  selectHandler: function selectHandler(options) {\n    this.changeSlide(options);\n  },\n  swipeStart: function swipeStart(e) {\n    var touches, posX, posY;\n\n    if (this.props.swipe === false || 'ontouchend' in document && this.props.swipe === false) {\n      return;\n    } else if (this.props.draggable === false && e.type.indexOf('mouse') !== -1) {\n      return;\n    }\n\n    posX = e.touches !== undefined ? e.touches[0].pageX : e.clientX;\n    posY = e.touches !== undefined ? e.touches[0].pageY : e.clientY;\n    this.setState({\n      dragging: true,\n      touchObject: {\n        startX: posX,\n        startY: posY,\n        curX: posX,\n        curY: posY\n      }\n    });\n  },\n  swipeMove: function swipeMove(e) {\n    if (!this.state.dragging) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.state.scrolling) {\n      return;\n    }\n\n    if (this.state.animating) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.vertical && this.props.swipeToSlide && this.props.verticalSwiping) {\n      e.preventDefault();\n    }\n\n    var swipeLeft;\n    var curLeft, positionOffset;\n    var touchObject = this.state.touchObject;\n    curLeft = (0, _trackHelper.getTrackLeft)((0, _objectAssign2.default)({\n      slideIndex: this.state.currentSlide,\n      trackRef: this.track\n    }, this.props, this.state));\n    touchObject.curX = e.touches ? e.touches[0].pageX : e.clientX;\n    touchObject.curY = e.touches ? e.touches[0].pageY : e.clientY;\n    touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curX - touchObject.startX, 2)));\n    var verticalSwipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curY - touchObject.startY, 2)));\n\n    if (!this.props.verticalSwiping && !this.state.swiping && verticalSwipeLength > 4) {\n      this.setState({\n        scrolling: true\n      });\n      return;\n    }\n\n    if (this.props.verticalSwiping) {\n      touchObject.swipeLength = verticalSwipeLength;\n    }\n\n    positionOffset = (this.props.rtl === false ? 1 : -1) * (touchObject.curX > touchObject.startX ? 1 : -1);\n\n    if (this.props.verticalSwiping) {\n      positionOffset = touchObject.curY > touchObject.startY ? 1 : -1;\n    }\n\n    var currentSlide = this.state.currentSlide;\n    var dotCount = Math.ceil(this.state.slideCount / this.props.slidesToScroll);\n    var swipeDirection = this.swipeDirection(this.state.touchObject);\n    var touchSwipeLength = touchObject.swipeLength;\n\n    if (this.props.infinite === false) {\n      if (currentSlide === 0 && swipeDirection === 'right' || currentSlide + 1 >= dotCount && swipeDirection === 'left') {\n        touchSwipeLength = touchObject.swipeLength * this.props.edgeFriction;\n\n        if (this.state.edgeDragged === false && this.props.edgeEvent) {\n          this.props.edgeEvent(swipeDirection);\n          this.setState({\n            edgeDragged: true\n          });\n        }\n      }\n    }\n\n    if (this.state.swiped === false && this.props.swipeEvent) {\n      this.props.swipeEvent(swipeDirection);\n      this.setState({\n        swiped: true\n      });\n    }\n\n    if (!this.props.vertical) {\n      swipeLeft = curLeft + touchSwipeLength * positionOffset;\n    } else {\n      swipeLeft = curLeft + touchSwipeLength * (this.state.listHeight / this.state.listWidth) * positionOffset;\n    }\n\n    if (this.props.verticalSwiping) {\n      swipeLeft = curLeft + touchSwipeLength * positionOffset;\n    }\n\n    this.setState({\n      touchObject: touchObject,\n      swipeLeft: swipeLeft,\n      trackStyle: (0, _trackHelper.getTrackCSS)((0, _objectAssign2.default)({\n        left: swipeLeft\n      }, this.props, this.state))\n    });\n\n    if (Math.abs(touchObject.curX - touchObject.startX) < Math.abs(touchObject.curY - touchObject.startY) * 0.8) {\n      return;\n    }\n\n    if (touchObject.swipeLength > 4) {\n      this.setState({\n        swiping: true\n      });\n      e.preventDefault();\n    }\n  },\n  getNavigableIndexes: function getNavigableIndexes() {\n    var max = void 0;\n    var breakPoint = 0;\n    var counter = 0;\n    var indexes = [];\n\n    if (!this.props.infinite) {\n      max = this.state.slideCount;\n    } else {\n      breakPoint = this.props.slidesToShow * -1;\n      counter = this.props.slidesToShow * -1;\n      max = this.state.slideCount * 2;\n    }\n\n    while (breakPoint < max) {\n      indexes.push(breakPoint);\n      breakPoint = counter + this.props.slidesToScroll;\n      counter += this.props.slidesToScroll <= this.props.slidesToShow ? this.props.slidesToScroll : this.props.slidesToShow;\n    }\n\n    return indexes;\n  },\n  checkNavigable: function checkNavigable(index) {\n    var navigables = this.getNavigableIndexes();\n    var prevNavigable = 0;\n\n    if (index > navigables[navigables.length - 1]) {\n      index = navigables[navigables.length - 1];\n    } else {\n      for (var n in navigables) {\n        if (index < navigables[n]) {\n          index = prevNavigable;\n          break;\n        }\n\n        prevNavigable = navigables[n];\n      }\n    }\n\n    return index;\n  },\n  getSlideCount: function getSlideCount() {\n    var _this = this;\n\n    var centerOffset = this.props.centerMode ? this.state.slideWidth * Math.floor(this.props.slidesToShow / 2) : 0;\n\n    if (this.props.swipeToSlide) {\n      var swipedSlide = void 0;\n\n      var slickList = _reactDom2.default.findDOMNode(this.list);\n\n      var slides = slickList.querySelectorAll('.slick-slide');\n      Array.from(slides).every(function (slide) {\n        if (!_this.props.vertical) {\n          if (slide.offsetLeft - centerOffset + _this.getWidth(slide) / 2 > _this.state.swipeLeft * -1) {\n            swipedSlide = slide;\n            return false;\n          }\n        } else {\n          if (slide.offsetTop + _this.getHeight(slide) / 2 > _this.state.swipeLeft * -1) {\n            swipedSlide = slide;\n            return false;\n          }\n        }\n\n        return true;\n      });\n      var slidesTraversed = Math.abs(swipedSlide.dataset.index - this.state.currentSlide) || 1;\n      return slidesTraversed;\n    } else {\n      return this.props.slidesToScroll;\n    }\n  },\n  swipeEnd: function swipeEnd(e) {\n    if (!this.state.dragging) {\n      if (this.props.swipe) {\n        e.preventDefault();\n      }\n\n      return;\n    }\n\n    var touchObject = this.state.touchObject;\n    var minSwipe = this.state.listWidth / this.props.touchThreshold;\n    var swipeDirection = this.swipeDirection(touchObject);\n\n    if (this.props.verticalSwiping) {\n      minSwipe = this.state.listHeight / this.props.touchThreshold;\n    }\n\n    var wasScrolling = this.state.scrolling; // reset the state of touch related state variables.\n\n    this.setState({\n      dragging: false,\n      edgeDragged: false,\n      scrolling: false,\n      swiping: false,\n      swiped: false,\n      swipeLeft: null,\n      touchObject: {}\n    });\n\n    if (wasScrolling) {\n      return;\n    } // Fix for #13\n\n\n    if (!touchObject.swipeLength) {\n      return;\n    }\n\n    if (touchObject.swipeLength > minSwipe) {\n      e.preventDefault();\n      var slideCount = void 0,\n          newSlide = void 0;\n\n      switch (swipeDirection) {\n        case 'left':\n        case 'down':\n          newSlide = this.state.currentSlide + this.getSlideCount();\n          slideCount = this.props.swipeToSlide ? this.checkNavigable(newSlide) : newSlide;\n          this.state.currentDirection = 0;\n          break;\n\n        case 'right':\n        case 'up':\n          newSlide = this.state.currentSlide - this.getSlideCount();\n          slideCount = this.props.swipeToSlide ? this.checkNavigable(newSlide) : newSlide;\n          this.state.currentDirection = 1;\n          break;\n\n        default:\n          slideCount = this.state.currentSlide;\n      }\n\n      this.slideHandler(slideCount);\n    } else {\n      // Adjust the track back to it's original position.\n      var currentLeft = (0, _trackHelper.getTrackLeft)((0, _objectAssign2.default)({\n        slideIndex: this.state.currentSlide,\n        trackRef: this.track\n      }, this.props, this.state));\n      this.setState({\n        trackStyle: (0, _trackHelper.getTrackAnimateCSS)((0, _objectAssign2.default)({\n          left: currentLeft\n        }, this.props, this.state))\n      });\n    }\n  },\n  onInnerSliderEnter: function onInnerSliderEnter(e) {\n    if (this.props.autoplay && this.props.pauseOnHover) {\n      this.pause();\n    }\n  },\n  onInnerSliderOver: function onInnerSliderOver(e) {\n    if (this.props.autoplay && this.props.pauseOnHover) {\n      this.pause();\n    }\n  },\n  onInnerSliderLeave: function onInnerSliderLeave(e) {\n    if (this.props.autoplay && this.props.pauseOnHover) {\n      this.autoPlay();\n    }\n  }\n};\nexports.default = EventHandlers;","map":{"version":3,"sources":["C:/Users/Santosh Gupta/Downloads/sbsc-master/node_modules/react-slick/lib/mixins/event-handlers.js"],"names":["exports","__esModule","_trackHelper","require","_helpers","_helpers2","_interopRequireDefault","_objectAssign","_objectAssign2","_reactDom","_reactDom2","obj","default","EventHandlers","changeSlide","options","indexOffset","previousInt","slideOffset","unevenOffset","targetSlide","_props","props","slidesToScroll","slidesToShow","_state","state","slideCount","currentSlide","message","lazyLoad","index","Number","slideHandler","keyHandler","e","target","tagName","match","keyCode","accessibility","rtl","selectHandler","swipeStart","touches","posX","posY","swipe","document","draggable","type","indexOf","undefined","pageX","clientX","pageY","clientY","setState","dragging","touchObject","startX","startY","curX","curY","swipeMove","preventDefault","scrolling","animating","vertical","swipeToSlide","verticalSwiping","swipeLeft","curLeft","positionOffset","getTrackLeft","slideIndex","trackRef","track","swipeLength","Math","round","sqrt","pow","verticalSwipeLength","swiping","dotCount","ceil","swipeDirection","touchSwipeLength","infinite","edgeFriction","edgeDragged","edgeEvent","swiped","swipeEvent","listHeight","listWidth","trackStyle","getTrackCSS","left","abs","getNavigableIndexes","max","breakPoint","counter","indexes","push","checkNavigable","navigables","prevNavigable","length","n","getSlideCount","_this","centerOffset","centerMode","slideWidth","floor","swipedSlide","slickList","findDOMNode","list","slides","querySelectorAll","Array","from","every","slide","offsetLeft","getWidth","offsetTop","getHeight","slidesTraversed","dataset","swipeEnd","minSwipe","touchThreshold","wasScrolling","newSlide","currentDirection","currentLeft","getTrackAnimateCSS","onInnerSliderEnter","autoplay","pauseOnHover","pause","onInnerSliderOver","onInnerSliderLeave","autoPlay"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _trackHelper = require('./trackHelper');\n\nvar _helpers = require('./helpers');\n\nvar _helpers2 = _interopRequireDefault(_helpers);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar EventHandlers = {\n  // Event handler for previous and next\n  changeSlide: function changeSlide(options) {\n    var indexOffset, previousInt, slideOffset, unevenOffset, targetSlide;\n    var _props = this.props,\n        slidesToScroll = _props.slidesToScroll,\n        slidesToShow = _props.slidesToShow;\n    var _state = this.state,\n        slideCount = _state.slideCount,\n        currentSlide = _state.currentSlide;\n\n    unevenOffset = slideCount % slidesToScroll !== 0;\n    indexOffset = unevenOffset ? 0 : (slideCount - currentSlide) % slidesToScroll;\n\n    if (options.message === 'previous') {\n      slideOffset = indexOffset === 0 ? slidesToScroll : slidesToShow - indexOffset;\n      targetSlide = currentSlide - slideOffset;\n      if (this.props.lazyLoad) {\n        previousInt = currentSlide - slideOffset;\n        targetSlide = previousInt === -1 ? slideCount - 1 : previousInt;\n      }\n    } else if (options.message === 'next') {\n      slideOffset = indexOffset === 0 ? slidesToScroll : indexOffset;\n      targetSlide = currentSlide + slideOffset;\n      if (this.props.lazyLoad) {\n        targetSlide = (currentSlide + slidesToScroll) % slideCount + indexOffset;\n      }\n    } else if (options.message === 'dots' || options.message === 'children') {\n      // Click on dots\n      targetSlide = options.index * options.slidesToScroll;\n      if (targetSlide === options.currentSlide) {\n        return;\n      }\n    } else if (options.message === 'index') {\n      targetSlide = Number(options.index);\n      if (targetSlide === options.currentSlide) {\n        return;\n      }\n    }\n\n    this.slideHandler(targetSlide);\n  },\n\n  // Accessiblity handler for previous and next\n  keyHandler: function keyHandler(e) {\n    //Dont slide if the cursor is inside the form fields and arrow keys are pressed\n    if (!e.target.tagName.match('TEXTAREA|INPUT|SELECT')) {\n      if (e.keyCode === 37 && this.props.accessibility === true) {\n        this.changeSlide({\n          message: this.props.rtl === true ? 'next' : 'previous'\n        });\n      } else if (e.keyCode === 39 && this.props.accessibility === true) {\n        this.changeSlide({\n          message: this.props.rtl === true ? 'previous' : 'next'\n        });\n      }\n    }\n  },\n  // Focus on selecting a slide (click handler on track)\n  selectHandler: function selectHandler(options) {\n    this.changeSlide(options);\n  },\n  swipeStart: function swipeStart(e) {\n    var touches, posX, posY;\n\n    if (this.props.swipe === false || 'ontouchend' in document && this.props.swipe === false) {\n      return;\n    } else if (this.props.draggable === false && e.type.indexOf('mouse') !== -1) {\n      return;\n    }\n    posX = e.touches !== undefined ? e.touches[0].pageX : e.clientX;\n    posY = e.touches !== undefined ? e.touches[0].pageY : e.clientY;\n    this.setState({\n      dragging: true,\n      touchObject: {\n        startX: posX,\n        startY: posY,\n        curX: posX,\n        curY: posY\n      }\n    });\n  },\n  swipeMove: function swipeMove(e) {\n    if (!this.state.dragging) {\n      e.preventDefault();\n      return;\n    }\n    if (this.state.scrolling) {\n      return;\n    }\n    if (this.state.animating) {\n      e.preventDefault();\n      return;\n    }\n    if (this.props.vertical && this.props.swipeToSlide && this.props.verticalSwiping) {\n      e.preventDefault();\n    }\n    var swipeLeft;\n    var curLeft, positionOffset;\n    var touchObject = this.state.touchObject;\n\n    curLeft = (0, _trackHelper.getTrackLeft)((0, _objectAssign2.default)({\n      slideIndex: this.state.currentSlide,\n      trackRef: this.track\n    }, this.props, this.state));\n    touchObject.curX = e.touches ? e.touches[0].pageX : e.clientX;\n    touchObject.curY = e.touches ? e.touches[0].pageY : e.clientY;\n    touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curX - touchObject.startX, 2)));\n    var verticalSwipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curY - touchObject.startY, 2)));\n\n    if (!this.props.verticalSwiping && !this.state.swiping && verticalSwipeLength > 4) {\n      this.setState({\n        scrolling: true\n      });\n      return;\n    }\n\n    if (this.props.verticalSwiping) {\n      touchObject.swipeLength = verticalSwipeLength;\n    }\n\n    positionOffset = (this.props.rtl === false ? 1 : -1) * (touchObject.curX > touchObject.startX ? 1 : -1);\n\n    if (this.props.verticalSwiping) {\n      positionOffset = touchObject.curY > touchObject.startY ? 1 : -1;\n    }\n\n    var currentSlide = this.state.currentSlide;\n    var dotCount = Math.ceil(this.state.slideCount / this.props.slidesToScroll);\n    var swipeDirection = this.swipeDirection(this.state.touchObject);\n    var touchSwipeLength = touchObject.swipeLength;\n\n    if (this.props.infinite === false) {\n      if (currentSlide === 0 && swipeDirection === 'right' || currentSlide + 1 >= dotCount && swipeDirection === 'left') {\n        touchSwipeLength = touchObject.swipeLength * this.props.edgeFriction;\n\n        if (this.state.edgeDragged === false && this.props.edgeEvent) {\n          this.props.edgeEvent(swipeDirection);\n          this.setState({ edgeDragged: true });\n        }\n      }\n    }\n\n    if (this.state.swiped === false && this.props.swipeEvent) {\n      this.props.swipeEvent(swipeDirection);\n      this.setState({ swiped: true });\n    }\n\n    if (!this.props.vertical) {\n      swipeLeft = curLeft + touchSwipeLength * positionOffset;\n    } else {\n      swipeLeft = curLeft + touchSwipeLength * (this.state.listHeight / this.state.listWidth) * positionOffset;\n    }\n\n    if (this.props.verticalSwiping) {\n      swipeLeft = curLeft + touchSwipeLength * positionOffset;\n    }\n\n    this.setState({\n      touchObject: touchObject,\n      swipeLeft: swipeLeft,\n      trackStyle: (0, _trackHelper.getTrackCSS)((0, _objectAssign2.default)({ left: swipeLeft }, this.props, this.state))\n    });\n\n    if (Math.abs(touchObject.curX - touchObject.startX) < Math.abs(touchObject.curY - touchObject.startY) * 0.8) {\n      return;\n    }\n    if (touchObject.swipeLength > 4) {\n      this.setState({\n        swiping: true\n      });\n      e.preventDefault();\n    }\n  },\n  getNavigableIndexes: function getNavigableIndexes() {\n    var max = void 0;\n    var breakPoint = 0;\n    var counter = 0;\n    var indexes = [];\n\n    if (!this.props.infinite) {\n      max = this.state.slideCount;\n    } else {\n      breakPoint = this.props.slidesToShow * -1;\n      counter = this.props.slidesToShow * -1;\n      max = this.state.slideCount * 2;\n    }\n\n    while (breakPoint < max) {\n      indexes.push(breakPoint);\n      breakPoint = counter + this.props.slidesToScroll;\n\n      counter += this.props.slidesToScroll <= this.props.slidesToShow ? this.props.slidesToScroll : this.props.slidesToShow;\n    }\n\n    return indexes;\n  },\n  checkNavigable: function checkNavigable(index) {\n    var navigables = this.getNavigableIndexes();\n    var prevNavigable = 0;\n\n    if (index > navigables[navigables.length - 1]) {\n      index = navigables[navigables.length - 1];\n    } else {\n      for (var n in navigables) {\n        if (index < navigables[n]) {\n          index = prevNavigable;\n          break;\n        }\n\n        prevNavigable = navigables[n];\n      }\n    }\n\n    return index;\n  },\n  getSlideCount: function getSlideCount() {\n    var _this = this;\n\n    var centerOffset = this.props.centerMode ? this.state.slideWidth * Math.floor(this.props.slidesToShow / 2) : 0;\n\n    if (this.props.swipeToSlide) {\n      var swipedSlide = void 0;\n\n      var slickList = _reactDom2.default.findDOMNode(this.list);\n\n      var slides = slickList.querySelectorAll('.slick-slide');\n\n      Array.from(slides).every(function (slide) {\n        if (!_this.props.vertical) {\n          if (slide.offsetLeft - centerOffset + _this.getWidth(slide) / 2 > _this.state.swipeLeft * -1) {\n            swipedSlide = slide;\n            return false;\n          }\n        } else {\n          if (slide.offsetTop + _this.getHeight(slide) / 2 > _this.state.swipeLeft * -1) {\n            swipedSlide = slide;\n            return false;\n          }\n        }\n\n        return true;\n      });\n\n      var slidesTraversed = Math.abs(swipedSlide.dataset.index - this.state.currentSlide) || 1;\n\n      return slidesTraversed;\n    } else {\n      return this.props.slidesToScroll;\n    }\n  },\n\n  swipeEnd: function swipeEnd(e) {\n    if (!this.state.dragging) {\n      if (this.props.swipe) {\n        e.preventDefault();\n      }\n      return;\n    }\n    var touchObject = this.state.touchObject;\n    var minSwipe = this.state.listWidth / this.props.touchThreshold;\n    var swipeDirection = this.swipeDirection(touchObject);\n\n    if (this.props.verticalSwiping) {\n      minSwipe = this.state.listHeight / this.props.touchThreshold;\n    }\n\n    var wasScrolling = this.state.scrolling;\n    // reset the state of touch related state variables.\n    this.setState({\n      dragging: false,\n      edgeDragged: false,\n      scrolling: false,\n      swiping: false,\n      swiped: false,\n      swipeLeft: null,\n      touchObject: {}\n    });\n    if (wasScrolling) {\n      return;\n    }\n\n    // Fix for #13\n    if (!touchObject.swipeLength) {\n      return;\n    }\n    if (touchObject.swipeLength > minSwipe) {\n      e.preventDefault();\n\n      var slideCount = void 0,\n          newSlide = void 0;\n\n      switch (swipeDirection) {\n\n        case 'left':\n        case 'down':\n          newSlide = this.state.currentSlide + this.getSlideCount();\n          slideCount = this.props.swipeToSlide ? this.checkNavigable(newSlide) : newSlide;\n          this.state.currentDirection = 0;\n          break;\n\n        case 'right':\n        case 'up':\n          newSlide = this.state.currentSlide - this.getSlideCount();\n          slideCount = this.props.swipeToSlide ? this.checkNavigable(newSlide) : newSlide;\n          this.state.currentDirection = 1;\n          break;\n\n        default:\n          slideCount = this.state.currentSlide;\n\n      }\n\n      this.slideHandler(slideCount);\n    } else {\n      // Adjust the track back to it's original position.\n      var currentLeft = (0, _trackHelper.getTrackLeft)((0, _objectAssign2.default)({\n        slideIndex: this.state.currentSlide,\n        trackRef: this.track\n      }, this.props, this.state));\n\n      this.setState({\n        trackStyle: (0, _trackHelper.getTrackAnimateCSS)((0, _objectAssign2.default)({ left: currentLeft }, this.props, this.state))\n      });\n    }\n  },\n  onInnerSliderEnter: function onInnerSliderEnter(e) {\n    if (this.props.autoplay && this.props.pauseOnHover) {\n      this.pause();\n    }\n  },\n  onInnerSliderOver: function onInnerSliderOver(e) {\n    if (this.props.autoplay && this.props.pauseOnHover) {\n      this.pause();\n    }\n  },\n  onInnerSliderLeave: function onInnerSliderLeave(e) {\n    if (this.props.autoplay && this.props.pauseOnHover) {\n      this.autoPlay();\n    }\n  }\n};\n\nexports.default = EventHandlers;"]},"metadata":{},"sourceType":"script"}